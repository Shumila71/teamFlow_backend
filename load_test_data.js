const { pool } = require('./db');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

// –ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function getOrCreateUser(username, password) {
  const check = await pool.query('SELECT id FROM users WHERE username = $1', [username]);
  
  if (check.rows.length > 0) {
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: ${check.rows[0].id})`);
    return check.rows[0].id;
  }
  
  const hashedPassword = await bcrypt.hash(password, 10);
  const result = await pool.query(
    'INSERT INTO users (username, password_hash) VALUES ($1, $2) RETURNING id',
    [username, hashedPassword]
  );
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} (ID: ${result.rows[0].id})`);
  return result.rows[0].id;
}

// –ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç
async function getOrCreateChat(name, creatorId) {
  const check = await pool.query('SELECT id FROM chats WHERE name = $1', [name]);
  
  if (check.rows.length > 0) {
    console.log(`‚úÖ –ß–∞—Ç "${name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: ${check.rows[0].id})`);
    return check.rows[0].id;
  }
  
  const result = await pool.query(
    'INSERT INTO chats (name, creator_id) VALUES ($1, $2) RETURNING id',
    [name, creatorId]
  );
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —á–∞—Ç "${name}" (ID: ${result.rows[0].id})`);
  return result.rows[0].id;
}

// –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
async function addUserToChat(chatId, userId, role, positionTag) {
  const check = await pool.query(
    'SELECT * FROM chat_users WHERE chat_id = $1 AND user_id = $2',
    [chatId, userId]
  );
  
  if (check.rows.length === 0) {
    await pool.query(
      'INSERT INTO chat_users (chat_id, user_id, role, position_tag) VALUES ($1, $2, $3, $4)',
      [chatId, userId, role, positionTag]
    );
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (ID: ${userId}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç –∫–∞–∫ ${role} —Å —Ç–µ–≥–æ–º "${positionTag}"`);
  } else {
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (ID: ${userId}) —É–∂–µ —É—á–∞—Å—Ç–Ω–∏–∫ —á–∞—Ç–∞`);
  }
}

// –î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
async function addTestMessages(chatId, adminId, userId) {
  const check = await pool.query('SELECT COUNT(*) FROM messages WHERE chat_id = $1', [chatId]);
  const messageCount = parseInt(check.rows[0].count);
  
  if (messageCount === 0) {
    await pool.query(
      'INSERT INTO messages (chat_id, sender_id, text) VALUES ($1, $2, $3)',
      [chatId, adminId, '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç!']
    );
    await pool.query(
      'INSERT INTO messages (chat_id, sender_id, text) VALUES ($1, $2, $3)',
      [chatId, userId, '–°–ø–∞—Å–∏–±–æ! –†–∞–¥ –±—ã—Ç—å –∑–¥–µ—Å—å!']
    );
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
  } else {
    console.log(`‚úÖ –í —á–∞—Ç–µ —É–∂–µ –µ—Å—Ç—å ${messageCount} —Å–æ–æ–±—â–µ–Ω–∏–π`);
  }
}

async function seedTestData() {
  try {
    console.log('üå± –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...');

    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    let adminId = await getOrCreateUser('admin', 'admin123');
    let userId = await getOrCreateUser('user', 'user123');

    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç
    let chatId = await getOrCreateChat('–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç', adminId);

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç –µ—Å–ª–∏ –∏—Ö —Ç–∞–º –Ω–µ—Ç
    await addUserToChat(chatId, adminId, 'admin', '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å');
    await addUserToChat(chatId, userId, 'member', '–°–æ—Ç—Ä—É–¥–Ω–∏–∫');

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    await addTestMessages(chatId, adminId, userId);

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã!');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', err);
  }
}

module.exports = { seedTestData }; 