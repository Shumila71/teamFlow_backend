const { pool } = require('./db');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

async function seedTestData() {
  try {
    console.log('üå± –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const adminCheck = await pool.query('SELECT id FROM users WHERE username = $1', ['admin']);
    const userCheck = await pool.query('SELECT id FROM users WHERE username = $1', ['user']);

    if (adminCheck.rows.length > 0 && userCheck.rows.length > 0) {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ');
      return;
    }

    console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–¥–º–∏–Ω)
    const adminPassword = await bcrypt.hash('admin123', 10);
    const adminResult = await pool.query(
      'INSERT INTO users (username, password_hash) VALUES ($1, $2) RETURNING id',
      ['admin', adminPassword]
    );
    const adminId = adminResult.rows[0].id;
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin');

    // –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userPassword = await bcrypt.hash('user123', 10);
    const userResult = await pool.query(
      'INSERT INTO users (username, password_hash) VALUES ($1, $2) RETURNING id',
      ['user', userPassword]
    );
    const userId = userResult.rows[0].id;
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å user');

    // –°–æ–∑–¥–∞–µ–º —á–∞—Ç
    const chatResult = await pool.query(
      'INSERT INTO chats (name, creator_id) VALUES ($1, $2) RETURNING id',
      ['–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç', adminId]
    );
    const chatId = chatResult.rows[0].id;
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω —á–∞—Ç');

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç —Å —Ä–æ–ª—è–º–∏ –∏ —Ç–µ–≥–∞–º–∏
    await pool.query(
      'INSERT INTO chat_users (chat_id, user_id, role, position_tag) VALUES ($1, $2, $3, $4)',
      [chatId, adminId, 'admin', '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å']
    );
    await pool.query(
      'INSERT INTO chat_users (chat_id, user_id, role, position_tag) VALUES ($1, $2, $3, $4)',
      [chatId, userId, 'member', '–°–æ—Ç—Ä—É–¥–Ω–∏–∫']
    );
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —á–∞—Ç —Å —Ä–æ–ª—è–º–∏ –∏ —Ç–µ–≥–∞–º–∏');

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    await pool.query(
      'INSERT INTO messages (chat_id, sender_id, text) VALUES ($1, $2, $3)',
      [chatId, adminId, '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç!']
    );
    await pool.query(
      'INSERT INTO messages (chat_id, sender_id, text) VALUES ($1, $2, $3)',
      [chatId, userId, '–°–ø–∞—Å–∏–±–æ! –†–∞–¥ –±—ã—Ç—å –∑–¥–µ—Å—å!']
    );
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è');

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', err);
  }
}

module.exports = { seedTestData }; 